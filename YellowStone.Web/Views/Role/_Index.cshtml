@using YellowStone.Models.Enums
@using YellowStone.Models
@model List<Role>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService;
@inject YellowStone.Services.IAppConfig appConfig;
<table id="wdb-table" class="table table-striped table-condensed">
    <thead class="head-title-box">
        <tr style="color:#ffffff">
            <th class="left">Name</th>
            <th class="left">Department</th>
            <th class="left">Permission</th>
            <th class="left">Status</th>
            <th class="right"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="left">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="left">
                    <p>@item?.Department?.Name</p>
                </td>
                <td class="left" style="width:100px; white-space:nowrap">
                    <a href="#" style="text-decoration:underline;" onclick="return viewDetails(@item.Id);">
                        View Details
                    </a>
                </td>

                <td class="left">
                    @item.Status.GetDescription()
                </td>

                <td class="right">

                    @if (((await AuthorizationService.AuthorizeAsync(User, ViewBag.user, "InitiateRoles")).Succeeded || ViewBag.user.IsAdmin))
                    {
                        @Html.ActionLink("Edit", "Index", "Role", new { roleId = item.Id }, new { @class = "btn btn-sm btn-outline-dark" })
                    }
                    @if ((await AuthorizationService.AuthorizeAsync(User, ViewBag.user, "ApproveRoles")).Succeeded || ViewBag.user.IsAdmin)
                    {
                        @if (item.Status == RequestStatus.Pending)
                        {
                            <a href="#" class="btn btn-sm btn-outline-success" onclick="return UpdateRole('@item.Id','@ActionTypes.Approve.ToString()');">Approve</a>
                            <a href="#" class="btn btn-sm btn-outline-danger" onclick="return UpdateRole('@item.Id','@ActionTypes.Reject.ToString()');">Reject</a>
                        }
                    }

                </td>
            </tr>
        }
    </tbody>
</table>



<script>
     var baseUrl = '@appConfig.BasePath';
     var timeoutUrl = "@Url.Content("~/Account/Login")";
    function viewDetails(id) {

        document.getElementById("overlay").style.display = 'block';

        var url = baseUrl + "/Role/ViewDetails?roleId=" + id;
        $.ajax({
            cache: false,
            url: url
        }).done
            (function (response, status, jqxhr) {
                $("#ViewDetailsContainer").html(response);
                $("#ViewDetailModal").modal();
                document.getElementById("overlay").style.display = 'none';
            })
            .fail(function (jqxhr, status, error) {
                if (error == "Unauthorized") {

                    window.location.href = timeoutUrl;
                }
                else
                {
                    alert(error + '. Kindly verify you are not inputting a duplicate.');
                    document.getElementById("overlay").style.display = 'none';
                 }
            });
        return false;
    }

</script>